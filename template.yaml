AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Typescript aws lambda template

# Parameters provided to the function. Can be used to create env vars during deploy
# See the samconfig.toml file
Parameters:
  token:
    Type: String
    Description: useful token for the application
  apiStage:
    Type: String
    Description: stage used to deploy the API

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Runtime: nodejs14.x

Resources:
  MyFunctionApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: my-gateway
      StageName: !Ref apiStage

  MyFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: my-function
      CodeUri: ./dist/myFunction
      Handler: app.handler
      Environment:
        Variables:
          TOKEN: !Ref token
      Layers:
        - !Ref MyLayer
      Events:
        MyFunctionApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /func
            Method: get
            RestApiId: !Ref MyFunctionApi

  MyFunction2:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: my-function-2
      CodeUri: ./dist/MyFunction2
      Handler: app.handler
      Environment:
        Variables:
          TOKEN: !Ref token
      Layers:
        - !Ref MyLayer
      Events:
        MyFunctionApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /func2
            Method: get
            RestApiId: !Ref MyFunctionApi

  MyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: my-function-dependencies
      Description: Dependencies for my-function
      ContentUri: ./dist/myLayer/
      CompatibleRuntimes:
        - nodejs14.x
      LicenseInfo: "MIT"
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: nodejs14.x

Outputs:
  MyFunctionApi:
    Description: "API Gateway endpoint URL for ${apiStage} stage for MyFunction"
    Value: !Sub "https://${MyFunctionApi}.execute-api.${AWS::Region}.amazonaws.com/${apiStage}/func"
  MyFunction2Api:
    Description: "API Gateway endpoint URL for ${apiStage} stage for MyFunction"
    Value: !Sub "https://${MyFunctionApi}.execute-api.${AWS::Region}.amazonaws.com/${apiStage}/func2"
  MyFunction:
    Description: "MyFunction ARN"
    Value: !GetAtt MyFunction.Arn
  MyFunction2:
    Description: "MyFunction2 ARN"
    Value: !GetAtt MyFunction2.Arn
  MyFunctionIamRole:
    Description: "Implicit IAM Role created for MyFunction"
    Value: !GetAtt MyFunctionRole.Arn
