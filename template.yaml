AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Simple REST API with CRUD functionalities

Parameters:
  region:
    Type: String
    Description: region in which the lambda functions operate
  apiStage:
    Type: String
    Description: stage used to deploy the API
  tableName:
    Type: String
    Description: name of the dynamoDB table

Globals:
  Function:
    Timeout: 3
    Runtime: nodejs14.x
    Environment:
      Variables:
        TABLE_NAME: !Ref tableName
        REGION: !Ref region

Resources:
  DynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref tableName
      AttributeDefinitions: 
        - AttributeName: pk
          AttributeType: "S"
        - AttributeName: sk
          AttributeType: "S"
      KeySchema: 
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: GSI_1
          KeySchema:
            - AttributeName: sk
              KeyType: HASH
            - AttributeName: pk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: gateway
      StageName: !Ref apiStage
      Models:
        Article:
          type: object
          required:
            - title
          properties:
            title:
              type: string
          not:
            required:
              - pk
              - sk
              - created
              - last_updated

  CreateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: crud-create-function
      CodeUri: ./dist/create
      Handler: app.handler
      Layers:
        - !Ref Dependencies
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref tableName
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /{type}
            Method: post
            RestApiId: !Ref ApiGateway
            RequestModel:
              Model: Article
              Required: true
              ValidateBody: true

  ReadFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: crud-read-function
      CodeUri: ./dist/read
      Handler: app.handler
      Layers:
        - !Ref Dependencies
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref tableName
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /{type}/{id}
            Method: get
            RestApiId: !Ref ApiGateway
        ApiGatewayAll:
          Type: Api
          Properties:
            Path: /{type}
            Method: get
            RestApiId: !Ref ApiGateway

  UpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: crud-update-function
      CodeUri: ./dist/update
      Handler: app.handler
      Layers:
        - !Ref Dependencies
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref tableName
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /{type}/{id}
            Method: post
            RestApiId: !Ref ApiGateway
            RequestModel:
              Model: Article
              Required: true
              ValidateBody: true

  DeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: crud-delete-function
      CodeUri: ./dist/delete
      Handler: app.handler
      Layers:
        - !Ref Dependencies
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref tableName
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /{type}/{id}
            Method: delete
            RestApiId: !Ref ApiGateway

  Dependencies:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: crud-dependencies
      Description: Dependencies for all the CRUD functions
      ContentUri: ./dist/dependencies/
      CompatibleRuntimes:
        - nodejs14.x
      LicenseInfo: "MIT"
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: nodejs14.x

Outputs:
  ApiGateway:
    Description: "API Gateway endpoint URL for ${apiStage} stage for MyFunction"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${apiStage}/"

