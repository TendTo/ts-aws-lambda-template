# This is a basic workflow to help you get started with Actions

name: Cookiecutter updater

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  cookiecutter:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT

      - name: Setup Git
        run: |
          git config --global user.name 'TendTo'
          git config --global user.email 'TendTo@users.noreply.github.com'
          git checkout -b "cookiecutter-action"

      # Runs a set of commands using the runners shell
      - name: Create the cookiecutter template
        run: |
          sed -i 's/ts_aws_template/$PACKAGE_NAME/' package.json
          sed -i 's/Typescript aws lambda template/$PACKAGE_DESCRIPTION/' package.json
          find . -type f -name 'package-lock.json' -delete
          rm -rf .github .devcontainer
          mkdir -p $FOLDER_NAME 
          mv $(ls -I $FOLDER_NAME) $FOLDER_NAME
          mv $FOLDER_NAME/LICENCE .
          echo "$COOKIECUTTER_CONFIG" > cookiecutter.json
          echo "$README" > README.md
        env:
          FOLDER_NAME: "{{cookiecutter.folder_name}}"
          PACKAGE_NAME: "{{cookiecutter.package_name}}"
          PACKAGE_DESCRIPTION: "{{cookiecutter.package_description}}"
          COOKIECUTTER_CONFIG: |-
            {
              "folder_name": "ts-aws-lambda",
              "package_name": "ts-aws-lambda",
              "package_description": "Typescript aws lambda template"
            }
          README: |-
            # Template for Typescript AWS Lambda template

            This is a [Cookiecutter](https://github.com/audreyr/cookiecutter) template to create a Serverless application using [Serverless Application Model (SAM)](https://aws.amazon.com/serverless/sam/) on Node.js 14 runtime using TypeScript for Lambda functions source code and shared layers for runtime dependencies.

            Resulted application will be the one you can find in this repository: [ts-aws-lambda-template](https://github.com/TendTo/ts-aws-lambda-template)

            ## Usage

            [Install AWS SAM CLI](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html) and run following command:

            ```sh
            sam init --location gh:TendTo/ts-aws-lambda-template
            ```

            You'll be prompted a few questions to help this template to scaffold this project and after its completion you should see a new folder at your current path with the name of the project you gave as input.

            ## Credits
            Inspired by [cookiecutter-aws-sam-typescript-layers](https://github.com/Envek/cookiecutter-aws-sam-typescript-layers)

      - name: Git Commit and Push on branch
        run: |
          git add -A
          git commit -m "update: cookiecutter"
          git push -f origin cookiecutter-action:cookiecutter

      - name: Git Commit and Push on cookiecutter repo
        run: |
          git fetch --unshallow origin
          git remote add cookiecutter https://github.com/TendTo/ts-aws-lambda-template-cookiecutter.git
          git push -f cookiecutter cookiecutter-action:cookiecutter
